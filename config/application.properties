#properties related to unit testing and running at the command line go here
logging.level.root=INFO
logging.level.org.springframework=INFO
server.port=9191
spring.profiles.active=local

#if you are behind a corporate proxy/firewall and want to access Predix Cloud
predix.oauth.proxyHost =sjc1intproxy01.crd.ge.com
predix.oauth.proxyPort=8080

#OAuth - please see predix-rest-client src/main/java/com/ge/predix/solsvc/restclient/config/OauthRestConfig.java for more info on oauth properties
# e.g. predix.oauth.restHost=36492c1e-657c-4377-ac51-add963552460.predix-uaa.cloud.com
predix.oauth.restHost=467ca8b6-3dc5-42b1-8c40-f71af4a7a49f.predix-uaa.run.aws-usw02-pr.ice.predix.io
#you may put client:secret as unencoded cleartext by setting predix.oauth.clientIdEncode=true
predix.oauth.clientIdEncode=false
predix.oauth.clientId=YXBwX2NsaWVudF9pZDpzZWNyZXQ=

#asset - get from VCAP env vars by binding an application to your asset instance e.g. cf bind-service <my-app> <my-asset>
#asset - see asset-bootstrap - src/main/java/com/ge/predix/solsvc/bootstrap/ams/common/AssetRestConfig.java for more info on asset properties 
predix.asset.restHost=https://predix-asset.run.aws-usw02-pr.ice.predix.io
predix.asset.zoneid=dcd2e5c2-e035-4e26-b37a-59b2a6d112be

#timeseries - get from VCAP env vars by binding an application to your timeseries instance e.g. cf bind-service <my-app> <my-timeseries>
#timeseries - see timeseries-bootstrap - src/main/java/com/ge/predix/solsvc/timeseries/bootstrap/config/TimeseriesRestConfig.java for more info on timeseries properties 
predix.timeseries.ingestUri=wss://gateway-predix-data-services.run.aws-usw02-pr.ice.predix.io/v1/stream/messages
predix.timeseries.queryUri=https://time-series-store-predix.run.aws-usw02-pr.ice.predix.io/v1/datapoints
predix.timeseries.baseUrl=https://time-series-store-predix.run.aws-usw02-pr.ice.predix.io
predix.timeseries.zoneid=867bb4a7-da24-4452-86bf-c8221e714a67

#deprecated - these override variables we are refactoring away from. 
predix.timeseries.override.oauthOverride=false
predix.timeseries.override.oauthClientId=put.your.clientId:put.your.clientSecret
predix.timeseries.override.oauthRestHost=put.your.timeseries.service.instance.host.name.url.here

#websocket for timeseries - get from VCAP env vars by binding an application to your timeseries instance e.g. cf bind-service <my-app> <my-timeseries>
#websocket for timeseries - see websocket-client - src/main/java/com/ge/predix/solsvc/websocket/config/IWebSocketConfig.java for more info on websocket properties 
predix.websocket.pool.maxIdle=5
predix.websocket.pool.maxActive=5
predix.websocket.pool.maxWait=8000
predix.websocket.pool.maxInstances=5
predix.websocket.uri=wss://gateway-predix-data-services.run.aws-usw02-pr.ice.predix.io/v1/stream/messages
predix.websocket.zoneid=867bb4a7-da24-4452-86bf-c8221e714a67

# Spring Security adds the following headers to the http response
security.basic.enabled=false
security.headers.cache=true 
# Enable cache control HTTP headers.
security.headers.content-type=true 
# Enable "X-Content-Type-Options" header.
security.headers.frame=true
security.headers.xss=true
security.filter-order=1
